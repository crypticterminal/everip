import hashlib, hmac

KEY_DIRECT_HEX = "D96E82160DE3C9559BCB3D817F78D5E1985FBA2B36F22BC75FB91F317AFBE6AF"
KEY_DIRECT_BYT = bytearray.fromhex(KEY_DIRECT_HEX)
KEY_LONG_HEX = "0AA56548E3C0882FC8F013B8DA92D9075BCD2A82148741BFFEBF119E45A3A10F9F3B9EE10F9CEEAEC3C05148A867E82AA278EE1B175E690C8F014644761EFF30DF1B802E01173B8BB2A7BBA7FAAFA886DE84BCE623AACA65C932ECCAA767E1C9A2D4822EC73EF5D69A5AD4E4DC489DFE36A89F7FC3BE5EF343E2C7C1CFB148633BF2B57E431FEE8A145812D9ADD0CC389EB2AEA4FA0751EFD6D2E12B2A7CA6DA12075CB337750D7347173CEF7B9058C6AB91C84D87CB3119A911AADCEA44DE8E28F821FCEA33D776FB6810AE985DBBAD2B9D59C84529BACC9C109A40F99CC86362351A6E76ADA4C093ABB6E75B8950341BE603864707E4B3A4CB0EE681F84F40199CCFA95674B032B1E07945E2DD6F878F243A92E4DEE9D95D443F5514EB26FB05F8B20E3C88726155E83211EC44965CE11C1A9D96E6B54948D4ED6A91686DAEF0F2E59854956147452DF24A47F145A9B15BD56F7F3162CE4C3E6E32FD439818A72649A346E1605015F4CA3CED91E832A2A9A63359A045206D2EE4C7818C028517A65FB1381AEA44C76C4D1C619BE04D46AD9F6CC074D3A6CEA6CC4DEDFB2DB8491B9B89BBAD1BB96CBF883F03D947B54D612C1CE798C0C9220C44D3183124A2DD1F9FC95D6C3C3C3DB707EB8463C9251137C54BAEE9DF05E3837105E71AC5321B30621CBDEA1DF05533879D35C8AAD8CE1179F5E586733B66BD8E7945941BB7"
KEY_LONG_BYT = bytearray.fromhex(KEY_LONG_HEX)

TEST_MSG_HEX = "000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFE"

def blake2s_hmac(key, msg):
  return hmac.new(key, msg=msg, digestmod=hashlib.blake2s).digest()

# first generate in/out based on direct key
for x in range((len(TEST_MSG_HEX) >> 1)+1):
  msg = bytearray.fromhex(TEST_MSG_HEX[0:x*2])
  print( '#define HMAC_KD_'+str(x)+'_IN "' + TEST_MSG_HEX[0:x*2] + '"')
  out = blake2s_hmac(KEY_DIRECT_BYT, msg)
  print( '#define HMAC_KD_'+str(x)+'_OUT "' + ''.join(format(x, '02X') for x in out) + '"' )

print()
print()

# first generate in/out based on direct key
for x in range((len(TEST_MSG_HEX) >> 1)+1):
  msg = bytearray.fromhex(TEST_MSG_HEX[0:x*2])
  print( '#define HMAC_KL_'+str(x)+'_IN "' + TEST_MSG_HEX[0:x*2] + '"')
  out = blake2s_hmac(KEY_LONG_BYT, msg)
  print( '#define HMAC_KL_'+str(x)+'_OUT "' + ''.join(format(x, '02X') for x in out) + '"' )

